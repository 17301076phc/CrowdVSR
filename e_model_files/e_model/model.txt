ENetwork(
  (networks): ModuleList()
  (layer): edgeSR_TR(
    (pixel_shuffle): PixelShuffle(upscale_factor=2)
    (softmax): Softmax(dim=1)
    (filter): Conv2d(48, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (rca): RCABlock(
    (ca): CALayer(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (conv_du): Sequential(
        (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
        (3): Sigmoid()
      )
    )
    (body): Sequential(
      (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (head): Sequential(
    (0): Conv2d(3, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (body): Sequential(
    (0): RCABlock(
      (ca): CALayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (conv_du): Sequential(
          (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
          (3): Sigmoid()
        )
      )
      (body): Sequential(
        (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): RCABlock(
      (ca): CALayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (conv_du): Sequential(
          (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
          (3): Sigmoid()
        )
      )
      (body): Sequential(
        (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): RCABlock(
      (ca): CALayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (conv_du): Sequential(
          (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
          (3): Sigmoid()
        )
      )
      (body): Sequential(
        (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (3): RCABlock(
      (ca): CALayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (conv_du): Sequential(
          (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
          (3): Sigmoid()
        )
      )
      (body): Sequential(
        (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (4): RCABlock(
      (ca): CALayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (conv_du): Sequential(
          (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
          (3): Sigmoid()
        )
      )
      (body): Sequential(
        (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (5): RCABlock(
      (ca): CALayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (conv_du): Sequential(
          (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
          (3): Sigmoid()
        )
      )
      (body): Sequential(
        (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (6): RCABlock(
      (ca): CALayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (conv_du): Sequential(
          (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
          (3): Sigmoid()
        )
      )
      (body): Sequential(
        (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (7): RCABlock(
      (ca): CALayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (conv_du): Sequential(
          (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
          (3): Sigmoid()
        )
      )
      (body): Sequential(
        (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (8): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (tail): Sequential(
    (0): edgeSR_TR(
      (pixel_shuffle): PixelShuffle(upscale_factor=2)
      (softmax): Softmax(dim=1)
      (filter): Conv2d(48, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
)