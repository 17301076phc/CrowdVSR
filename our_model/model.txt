OurNetwork(
  (networks): ModuleList(
    (0): SingleNetwork(
      (head): Sequential(
        (0): Conv2d(3, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (body): Sequential(
        (0): NAFBlock(
          (conv1): Conv2d(26, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(52, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(26, 1, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(1, 26, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (1): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (tail): Sequential(
        (0): Conv2d(26, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): SingleNetwork(
      (head): Sequential(
        (0): Conv2d(3, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (body): Sequential(
        (0): NAFBlock(
          (conv1): Conv2d(26, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(52, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(26, 1, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(1, 26, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (1): NAFBlock(
          (conv1): Conv2d(26, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(52, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(26, 1, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(1, 26, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (2): NAFBlock(
          (conv1): Conv2d(26, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(52, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(26, 1, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(1, 26, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (3): NAFBlock(
          (conv1): Conv2d(26, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(52, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(26, 1, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(1, 26, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (4): NAFBlock(
          (conv1): Conv2d(26, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(52, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(26, 1, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(1, 26, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (5): NAFBlock(
          (conv1): Conv2d(26, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(52, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(26, 1, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(1, 26, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (6): NAFBlock(
          (conv1): Conv2d(26, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(52, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(26, 1, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(1, 26, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (7): NAFBlock(
          (conv1): Conv2d(26, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(52, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(26, 1, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(1, 26, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (8): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (tail): Sequential(
        (0): Conv2d(26, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (upscale): Sequential(
        (0): Sequential(
          (0): Conv2d(26, 104, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): PixelShuffle(upscale_factor=2)
        )
      )
    )
    (2): SingleNetwork(
      (head): Sequential(
        (0): Conv2d(3, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (body): Sequential(
        (0): NAFBlock(
          (conv1): Conv2d(42, 84, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(84, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(42, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(2, 42, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (1): NAFBlock(
          (conv1): Conv2d(42, 84, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(84, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(42, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(2, 42, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (2): NAFBlock(
          (conv1): Conv2d(42, 84, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(84, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(42, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(2, 42, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (3): NAFBlock(
          (conv1): Conv2d(42, 84, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(84, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(42, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(2, 42, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (4): NAFBlock(
          (conv1): Conv2d(42, 84, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(84, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(42, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(2, 42, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (5): NAFBlock(
          (conv1): Conv2d(42, 84, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(84, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(42, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(2, 42, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (6): NAFBlock(
          (conv1): Conv2d(42, 84, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(84, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(42, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(2, 42, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (7): NAFBlock(
          (conv1): Conv2d(42, 84, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(84, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(42, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(2, 42, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (8): Conv2d(42, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (tail): Sequential(
        (0): Conv2d(42, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (upscale): Sequential(
        (0): Sequential(
          (0): Conv2d(42, 378, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): PixelShuffle(upscale_factor=3)
        )
      )
    )
    (3): SingleNetwork(
      (head): Sequential(
        (0): Conv2d(3, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (body): Sequential(
        (0): NAFBlock(
          (conv1): Conv2d(48, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(96, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (1): NAFBlock(
          (conv1): Conv2d(48, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(96, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (2): NAFBlock(
          (conv1): Conv2d(48, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(96, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (3): NAFBlock(
          (conv1): Conv2d(48, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(96, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (4): NAFBlock(
          (conv1): Conv2d(48, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(96, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (5): NAFBlock(
          (conv1): Conv2d(48, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(96, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (6): NAFBlock(
          (conv1): Conv2d(48, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(96, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (7): NAFBlock(
          (conv1): Conv2d(48, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(96, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (sca): CALayer(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (conv_du): Sequential(
              (0): Conv2d(48, 3, kernel_size=(1, 1), stride=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(3, 48, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
          )
          (conv4): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv5): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (8): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (tail): Sequential(
        (0): Conv2d(48, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (upscale): Sequential(
        (0): Sequential(
          (0): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): PixelShuffle(upscale_factor=2)
          (2): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): PixelShuffle(upscale_factor=2)
        )
      )
    )
  )
)